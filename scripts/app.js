// Generated by CoffeeScript 1.7.1
(function() {
  var AjaxifyForm, AjaxifyModal;

  this.typeIsArray = Array.isArray || function(value) {
    return {}.toString.call(value) === '[object Array]';
  };

  AjaxifyModal = (function() {
    function AjaxifyModal(modal) {
      this.modal = $("#" + modal);
      this.form = this.modal.find('form');
      this.loading = this.modal.find('.loading');
      this.success = this.modal.find('.success');
      this.errors = this.modal.find('.alert');
      this.form.on('ajax:send', (function(_this) {
        return function() {
          _this.reset_form();
          return _this.form.show().fadeOut({
            duration: 200,
            done: function() {
              return _this.loading.fadeIn({
                duration: 200
              });
            }
          });
        };
      })(this)).on("ajax:success", (function(_this) {
        return function(e, data, status, xhr) {
          _this.reset_form();
          _this.loading.show().fadeOut({
            duration: 200,
            done: function() {
              return _this.success.fadeIn({
                duration: 200
              });
            }
          });
          if (_this.callback) {
            return _this.callback();
          }
        };
      })(this)).on("ajax:error", (function(_this) {
        return function(e, xhr, status, error) {
          _this.reset_form();
          return _this.loading.show().fadeOut({
            duration: 200,
            done: function() {
              var data;
              _this.form.fadeIn({
                duration: 200
              });
              _this.errors.html("<ul></ul>").fadeIn({
                duration: 200
              });
              data = $.parseJSON(xhr.responseText);
              return _this.receive_errors(data);
            }
          });
        };
      })(this));
    }

    AjaxifyModal.prototype.reset_form = function() {
      this.form.stop(true).hide();
      this.loading.stop(true).hide();
      this.success.hide();
      this.errors.hide();
      return this.modal.find("input,textarea,select").removeClass('error');
    };

    AjaxifyModal.prototype.show_loading = function() {
      this.reset_form();
      return this.loading.fadeIn({
        duration: 200
      });
    };

    AjaxifyModal.prototype.show_form = function() {
      this.reset_form();
      return this.form.fadeIn({
        duration: 200
      }, function() {
        return this.form.find('input:first').focus();
      });
    };

    AjaxifyModal.prototype.receive_errors = function(data) {
      var errors, field, model, text, _results;
      _results = [];
      for (model in data) {
        errors = data[model];
        _results.push((function() {
          var _results1;
          _results1 = [];
          for (field in errors) {
            text = errors[field];
            if (typeIsArray(text)) {
              text = text.join(' and ');
            }
            this.errors.find("ul").append("<li>" + (field.humanize()) + " " + text + "</li>");
            _results1.push(this.modal.find("#" + model + "_" + field).addClass('error'));
          }
          return _results1;
        }).call(this));
      }
      return _results;
    };

    return AjaxifyModal;

  })();

  this.AjaxifyModal = AjaxifyModal;

  AjaxifyForm = (function() {
    function AjaxifyForm(form_container) {
      this.container = $("#" + form_container);
      this.form = this.container.find('form');
      this.loading = this.container.find('.loading');
      this.success = this.container.find('.success');
      this.errors = this.container.find('.alert');
    }

    AjaxifyForm.prototype.reset_form = function() {
      this.form.stop(true).hide();
      this.loading.stop(true).hide();
      this.loading.height(this.form.outerHeight());
      this.success.hide();
      this.errors.hide();
      return this.container.find("input,textarea,select").removeClass('error');
    };

    AjaxifyForm.prototype.show_loading = function() {
      this.reset_form();
      return this.loading.fadeIn({
        duration: 200
      });
    };

    AjaxifyForm.prototype.show_form = function() {
      this.reset_form();
      return this.form.fadeIn({
        duration: 200
      });
    };

    AjaxifyForm.prototype.receive_errors = function(data) {
      var errors, field, model, text, _results;
      _results = [];
      for (model in data) {
        errors = data[model];
        _results.push((function() {
          var _results1;
          _results1 = [];
          for (field in errors) {
            text = errors[field];
            if (typeIsArray(text)) {
              text = text.join(' and ');
            }
            this.errors.find("ul").append("<li>" + (field.humanize()) + " " + text + "</li>");
            _results1.push(this.container.find("#" + model + "_" + field).addClass('error'));
          }
          return _results1;
        }).call(this));
      }
      return _results;
    };

    return AjaxifyForm;

  })();

  this.AjaxifyForm = AjaxifyForm;

  $(document).ready(function() {
    var popup;
    $(document).foundation();
    $('.exit-off-canvas, .right-off-canvas-toggle').on('click.fndtn.offcanvas', function() {
      return $('#sidebar').click();
    });
    popup = new AjaxifyModal('contact-popup');
    return popup.form.submit(function(e) {
      $('#contact-popup form').trigger('ajax:send');
      e.preventDefault();
      return false;
    });
  });

}).call(this);
